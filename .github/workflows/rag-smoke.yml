name: RAG Smoke (Phase-10)

on:
  push:
    branches: [ main, master, feature/** ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rag-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-memory.txt || true
          pip install -U "huggingface_hub[cli]>=0.23"

      - name: Prepare folders
        run: |
          mkdir -p models/bge-m3 storage/chroma
          chmod +x scripts/*.sh || true

      - name: Download embeddings (bge-m3)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          huggingface-cli download \
            --repo-type model BAAI/bge-m3 \
            --local-dir models/bge-m3 \
            --local-dir-use-symlinks False
          ls -lh models/bge-m3 | head -n 20

      - name: Write CI .env
        run: |
          {
            echo "AIR4_MEMORY_BACKEND=chroma"
            echo "AIR4_EMBED_MODEL_PATH=models/bge-m3"
            echo "CHROMA_DIR=storage/chroma"
            echo "AIR4_CHROMA_COLLECTION=air4_memory"
            echo "AIR4_OFFLINE=1"
          } > .env
          echo "---- .env ----"
          cat .env

      - name: Start API (bg)
        run: |
          set -e
          mkdir -p storage/chroma
          echo "Starting API..."
          uvicorn backend.app.main:app \
            --host 127.0.0.1 --port 8000 \
            --env-file .env \
            --log-level debug >server.log 2>&1 &
          echo $! > .uvicorn.pid
          for i in {1..30}; do
            curl -fsS http://127.0.0.1:8000/health && break || sleep 1
          done
          echo "---- /health ----"
          curl -sS http://127.0.0.1:8000/health || true

      - name: Health check
        run: curl -fsS http://127.0.0.1:8000/health

      - name: Guard: ensure Chroma + embeddings are active
        run: |
          set -e
          HEALTH="$(curl -fsS http://127.0.0.1:8000/health || true)"
          echo "$HEALTH"
          echo "$HEALTH" | grep -q '"memory_backend":"chroma"' || {
            echo "Memory backend is NOT 'chroma' (embeddings init failed?)."
            echo "---- tail server.log ----"
            tail -n 300 server.log || true
            exit 2
          }

      - name: Sanity: one ingest call (debug)
        run: |
          set -e
          echo "Trying single ingestâ€¦"
          curl -sS -o /tmp/ingest_resp.json -w "\nHTTP:%{http_code}\n" \
            -F "file=@tests/rag_corpus/docs/noise_finance.txt" \
            http://127.0.0.1:8000/ingest/file || true
          echo "--- ingest response (first 400 chars) ---"
          head -c 400 /tmp/ingest_resp.json || true
          echo
          echo "----------------------------------------"

      - name: Run smoke
        run: bash scripts/smoke_phase10_rag.sh

      - name: Upload smoke log (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-log
          path: |
            .smoke.log
            .smoke_phase10_step2.log
            server.log
          if-no-files-found: ignore

      - name: Print server logs on failure
        if: failure()
        run: |
          echo "==== server.log (tail) ===="
          tail -n 200 server.log || true

      - name: Teardown
        if: always()
        run: |
          if [ -f .uvicorn.pid ]; then kill "$(cat .uvicorn.pid)" || true; fi